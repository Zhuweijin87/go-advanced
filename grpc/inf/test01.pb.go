// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test01.proto

package inf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 请求
type DataReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataReq) Reset()         { *m = DataReq{} }
func (m *DataReq) String() string { return proto.CompactTextString(m) }
func (*DataReq) ProtoMessage()    {}
func (*DataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_test01_a8c50907aa54b70c, []int{0}
}
func (m *DataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataReq.Unmarshal(m, b)
}
func (m *DataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataReq.Marshal(b, m, deterministic)
}
func (dst *DataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataReq.Merge(dst, src)
}
func (m *DataReq) XXX_Size() int {
	return xxx_messageInfo_DataReq.Size(m)
}
func (m *DataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DataReq.DiscardUnknown(m)
}

var xxx_messageInfo_DataReq proto.InternalMessageInfo

func (m *DataReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 响应
type DataRsp struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Times                int64    `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataRsp) Reset()         { *m = DataRsp{} }
func (m *DataRsp) String() string { return proto.CompactTextString(m) }
func (*DataRsp) ProtoMessage()    {}
func (*DataRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_test01_a8c50907aa54b70c, []int{1}
}
func (m *DataRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRsp.Unmarshal(m, b)
}
func (m *DataRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRsp.Marshal(b, m, deterministic)
}
func (dst *DataRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRsp.Merge(dst, src)
}
func (m *DataRsp) XXX_Size() int {
	return xxx_messageInfo_DataRsp.Size(m)
}
func (m *DataRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DataRsp proto.InternalMessageInfo

func (m *DataRsp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataRsp) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

type Data2Rsp struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data2Rsp) Reset()         { *m = Data2Rsp{} }
func (m *Data2Rsp) String() string { return proto.CompactTextString(m) }
func (*Data2Rsp) ProtoMessage()    {}
func (*Data2Rsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_test01_a8c50907aa54b70c, []int{2}
}
func (m *Data2Rsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data2Rsp.Unmarshal(m, b)
}
func (m *Data2Rsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data2Rsp.Marshal(b, m, deterministic)
}
func (dst *Data2Rsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data2Rsp.Merge(dst, src)
}
func (m *Data2Rsp) XXX_Size() int {
	return xxx_messageInfo_Data2Rsp.Size(m)
}
func (m *Data2Rsp) XXX_DiscardUnknown() {
	xxx_messageInfo_Data2Rsp.DiscardUnknown(m)
}

var xxx_messageInfo_Data2Rsp proto.InternalMessageInfo

func (m *Data2Rsp) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

func init() {
	proto.RegisterType((*DataReq)(nil), "inf.DataReq")
	proto.RegisterType((*DataRsp)(nil), "inf.DataRsp")
	proto.RegisterType((*Data2Rsp)(nil), "inf.Data2Rsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataClient is the client API for Data service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataClient interface {
	GetData(ctx context.Context, in *DataReq, opts ...grpc.CallOption) (*DataRsp, error)
	GetString(ctx context.Context, in *DataReq, opts ...grpc.CallOption) (*Data2Rsp, error)
}

type dataClient struct {
	cc *grpc.ClientConn
}

func NewDataClient(cc *grpc.ClientConn) DataClient {
	return &dataClient{cc}
}

func (c *dataClient) GetData(ctx context.Context, in *DataReq, opts ...grpc.CallOption) (*DataRsp, error) {
	out := new(DataRsp)
	err := c.cc.Invoke(ctx, "/inf.Data/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) GetString(ctx context.Context, in *DataReq, opts ...grpc.CallOption) (*Data2Rsp, error) {
	out := new(Data2Rsp)
	err := c.cc.Invoke(ctx, "/inf.Data/GetString", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataServer is the server API for Data service.
type DataServer interface {
	GetData(context.Context, *DataReq) (*DataRsp, error)
	GetString(context.Context, *DataReq) (*Data2Rsp, error)
}

func RegisterDataServer(s *grpc.Server, srv DataServer) {
	s.RegisterService(&_Data_serviceDesc, srv)
}

func _Data_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.Data/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetData(ctx, req.(*DataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_GetString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).GetString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inf.Data/GetString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).GetString(ctx, req.(*DataReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Data_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inf.Data",
	HandlerType: (*DataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _Data_GetData_Handler,
		},
		{
			MethodName: "GetString",
			Handler:    _Data_GetString_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test01.proto",
}

func init() { proto.RegisterFile("test01.proto", fileDescriptor_test01_a8c50907aa54b70c) }

var fileDescriptor_test01_a8c50907aa54b70c = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x49, 0x2d, 0x2e,
	0x31, 0x30, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0xcc, 0x4b, 0x53, 0x92, 0xe4,
	0x62, 0x77, 0x49, 0x2c, 0x49, 0x0c, 0x4a, 0x2d, 0x14, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xca, 0x4c, 0x51, 0x32, 0x86, 0x4a, 0x15, 0x17, 0x08, 0x09,
	0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x82, 0x25, 0x39, 0x83, 0xc0, 0x6c, 0x21, 0x11, 0x2e, 0xd6,
	0x92, 0xcc, 0xdc, 0xd4, 0x62, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x08, 0x47, 0x49, 0x8e,
	0x8b, 0x03, 0xa4, 0xc9, 0x08, 0xaa, 0xab, 0x28, 0xb5, 0xb8, 0x00, 0xa6, 0x0b, 0xc4, 0x36, 0x0a,
	0xe7, 0x62, 0x01, 0xc9, 0x0b, 0xa9, 0x72, 0xb1, 0xbb, 0xa7, 0x96, 0x80, 0x99, 0x3c, 0x7a, 0x99,
	0x79, 0x69, 0x7a, 0x50, 0x57, 0x48, 0x21, 0xf1, 0x8a, 0x0b, 0x84, 0x34, 0xb8, 0x38, 0xdd, 0x53,
	0x4b, 0x82, 0x4b, 0x8a, 0x32, 0xf3, 0xd2, 0xd1, 0x14, 0xf2, 0xc2, 0x79, 0x20, 0xcb, 0x92, 0xd8,
	0xc0, 0x9e, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa1, 0xdf, 0x79, 0xe4, 0x00, 0x00,
	0x00,
}
